# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '8ad5bf34-eb2b-4577-acb1-4c203b12791f'
  imageRepository: 'webapp'
  containerRegistry: 'mahaksazurecg.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
        
- stage: validate
  jobs:
    - job: validate
      continueOnError: false
      steps: 
    
      - task: TerraformTaskV3@3
        displayName: 'init'
        inputs:
          provider: 'azurerm'
          command: 'init'
          backendServiceArm: 'asc'
          backendAzureRmResourceGroupName: 'sharmargmahak'
          backendAzureRmStorageAccountName: 'backendstorageaccmahak'
          backendAzureRmContainerName: 'mstfstate'
          backendAzureRmKey: 'terraform.tfstate'
      - task: TerraformTaskV3@3
        displayName: 'validate'
        inputs:
          provider: 'azurerm'
          command: 'validate'
- stage: deploy
  jobs:
      - deployment: deploy_terraform 
        continueOnError: false
        environment: 'dev'
        strategy:
         runOnce:
           deploy:
             steps:
               - checkout: self
               - task: TerraformInstaller@0
                 displayName: 'install'
                 inputs:
                   terraformVersion: '1.3.7'
               - task: TerraformTaskV3@3
                 displayName: 'init'
                 inputs:
                   provider: 'azurerm'
                   command: 'init'
                   backendServiceArm: 'asc'
                   backendAzureRmResourceGroupName: 'sharmargmahak'
                   backendAzureRmStorageAccountName: 'backendstorageaccmahak'
                   backendAzureRmContainerName: 'mstfstate'
                   backendAzureRmKey: 'terraform.tfstate'
               - task: TerraformTaskV3@3
                 displayName: 'plan'
                 inputs:
                   provider: 'azurerm'
                   command: 'plan'
                   environmentServiceNameAzureRM: 'asc'
               - task: TerraformTaskV3@3
                 displayName: 'apply'
                 inputs:
                   provider: 'azurerm'
                   command: 'apply'
                   environmentServiceNameAzureRM: 'asc'          
