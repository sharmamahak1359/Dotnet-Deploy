trigger:
- main

variables:
  resourceGroupName: "msrgiac"
  location: "uksouth"
  imageName: "webapp"
  deploymentName: "my-terraform-deployment"

stages:
- stage: Build
  displayName: Build Docker image
  jobs:
  - job: BuildDockerImage
    displayName: Build Docker image
    pool:
      vmImage: "ubuntu-latest"
    steps:
    - task: Docker@2
      displayName: Build Docker image
      inputs:
        containerRegistry: "my-container-registry"
        repository: $(imageName)
        command: "build"
        Dockerfile: "$(System.DefaultWorkingDirectory)/Dockerfile"
        
- stage: Push
  displayName: Push Docker image
  jobs:
  - job: PushDockerImage
    displayName: Push Docker image
    pool:
      vmImage: "ubuntu-latest"
    steps:
    - task: Docker@2
      displayName: Push Docker image
      inputs:
        containerRegistry: "my-container-registry"
        repository: $(imageName)
        command: "push"
        Dockerfile: "$(System.DefaultWorkingDirectory)/Dockerfile"
        tags: "$(Build.BuildId)"
  
- stage: validate
  jobs:
    - job: validate
      continueOnError: false
      steps: 
    
       - task: TerraformTaskV3@3
         displayName: 'init'
         inputs:
          provider: 'azurerm'
          command: 'init'
          backendServiceArm: 'Azure service connection'
          backendAzureRmResourceGroupName: 'tfrgblobstore'
          backendAzureRmStorageAccountName: 'tfstaccbackend'
          backendAzureRmContainerName: 'tfstate'
          backendAzureRmKey: 'terraform.tfstate'
       - task: TerraformTaskV3@3
         displayName: 'validate'
         inputs:
          provider: 'azurerm'
          command: 'validate'
  
- stage: deploy
  jobs:
      - deployment: deploy_terraform 
        continueOnError: false
        environment: 'dev'
        strategy:
         runOnce:
           deploy:
             steps:
               - checkout: self
               - task: TerraformInstaller@0
                 displayName: 'install'
                 inputs:
                   terraformVersion: '1.3.7'
               - task: TerraformTaskV3@3
                 displayName: 'init'
                 inputs:
                   provider: 'azurerm'
                   command: 'init'
                   backendServiceArm: 'Azure service connection'
                   backendAzureRmResourceGroupName: 'tfrgblobstore'
                   backendAzureRmStorageAccountName: 'tfstaccbackend'
                   backendAzureRmContainerName: 'tfstate'
                   backendAzureRmKey: 'terraform.tfstate'
               - task: TerraformTaskV3@3
                 displayName: 'plan'
                 inputs:
                   provider: 'azurerm'
                   command: 'plan'
                   environmentServiceNameAzureRM: 'Azure service connection'
               - task: TerraformTaskV3@3
                 displayName: 'apply'
                 inputs:
                   provider: 'azurerm'
                   command: 'apply'
                   environmentServiceNameAzureRM: 'Azure service connection'    

  
        


